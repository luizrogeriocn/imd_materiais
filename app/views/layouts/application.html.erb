<!DOCTYPE html>
<html>
  <head>
    <title>ImdMateriais</title>
    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
    <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
    <%= csrf_meta_tags %>
  </head>
  <body>
    <nav class="navbar navbar-default navbar-static-top navbar-inverse">
      <div class="container">
        <div class="navbar-header">
          <%= link_to "MaterialsIMD", tasks_path, class: "navbar-brand" %>
          
        </div>
        <div id="navbar" class="navbar-collapse collapse">
          <ul class="nav navbar-nav">
            <li><%= link_to "Materials", materials_path %></li>
            <li><%= link_to "Lessons", lessons_path %></li>
            <li><%= link_to "Users", users_path %></li>
          </ul>
          <ul class="nav navbar-nav navbar-right">
            <li class="dropdown">
              <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">
                <% if current_user.nil? %>
                <%= 'Bem vindo' %>
                <% else %>
                <%='Bem vindo, '+current_user.nickname%>
                <% end %>
                <span class="caret"></span>
              </a>
              <ul class="dropdown-menu" role="menu">
                <li><a href="#">Configurações</a></li>
                <li>
                  <% if user_signed_in? %>
                  <%= link_to "Sair", destroy_user_session_path, method: :delete %>
                  <% else %>
                  <li><%= link_to "Entrar", new_user_session_path %></li>
                  <% end %>
                </li>
                <li class="divider"></li>
                <li class="dropdown-header">Ajuda</li>
                <li><a href="#">FAQ</a></li>
                <li><a href="#">Contactar suporte</a></li>
              </ul>
            </li>
          </ul>
        </div>
      </div>
    </nav>

    <div class="container">
      <div class="row">
        <div class="col-xs-3">
          <div class="col-xs-12">
            <div class="thumbnail text-center">
              <i class="fa fa-user fa-5x"></i>
              <div class="caption">
                <h3><%= current_user.nickname %></h3>
                <p>Tarefas</p>
                <div class="progress">
                  <div class="progress-bar progress-bar-info progress-bar-striped" style="width: 77%">
                    <span class="sr-only">77% Completo</span>
                  </div>
                </div>
                <p>Materiais</p>
                <div class="progress">
                  <div class="progress-bar progress-bar-success" style="width: 65%">
                    <span class="sr-only">55% Aprovado (success)</span>
                  </div>
                  <div class="progress-bar progress-bar-warning progress-bar-striped" style="width: 20%">
                    <span class="sr-only">20% Em analise (warning)</span>
                  </div>
                  <div class="progress-bar progress-bar-danger" style="width: 15%">
                    <span class="sr-only">10% Reprovado (danger)</span>
                  </div>
                </div>
              </div>
            </div>

          </div>
        </div>
        <div  id="page" class="col-xs-9">
          <%= yield %>
        </div>
      </div>
    </div>

    <script src="//cdnjs.cloudflare.com/ajax/libs/Sortable/1.2.0/Sortable.min.js"></script>
    <script type="text/javascript">
    $('document').ready(function() {
    setTimeout(function() {
    $('#notice').slideUp();
    }, 3000);
    });
    </script>
    <script>
      var el = document.getElementById('finished-tasks-table');
      var sortable = new Sortable(el, {
          group: { name: "tasks", pull: true, put: true },  // or { name: "...", pull: [true, false, clone], put: [true, false, array] }
          sort: true,  // sorting inside list
          delay: 0, // time in milliseconds to define when the sorting should start
          disabled: false, // Disables the sortable if set to true.
          store: null,  // @see Store
          animation: 150,  // ms, animation speed moving items when sorting, `0` — without animation
          // handle: ".draggable",
          draggable: ".task",  // Specifies which items inside the element should be sortable
          ghostClass: "sortable-ghost",  // Class name for the drop placeholder
          dataIdAttr: 'data-id',

          scroll: true, // or HTMLElement
          scrollSensitivity: 30, // px, how near the mouse must be to an edge to start scrolling.
          scrollSpeed: 10, // px

          // Element is dropped into the list from another list
          onAdd: function (/**Event*/evt) {
              var itemEl = evt.item;  // dragged HTMLElement
              evt.from;  // previous list
              // + indexes from onEnd

              target = $(itemEl).closest(".tasks-table");

              $.get("/tasks/" + itemEl.dataset.taskId + "/edit", { status: target[0].dataset.taskStatus });
          },
      });
      var el = document.getElementById('unfinished-tasks-table');
      var sortable = new Sortable(el, {
          group: { name: "tasks", pull: true, put: true },  // or { name: "...", pull: [true, false, clone], put: [true, false, array] }
          sort: true,  // sorting inside list
          delay: 0, // time in milliseconds to define when the sorting should start
          disabled: false, // Disables the sortable if set to true.
          store: null,  // @see Store
          animation: 150,  // ms, animation speed moving items when sorting, `0` — without animation
          // handle: ".draggable",
          draggable: ".task",  // Specifies which items inside the element should be sortable
          ghostClass: "sortable-ghost",  // Class name for the drop placeholder
          dataIdAttr: 'data-id',

          scroll: true, // or HTMLElement
          scrollSensitivity: 30, // px, how near the mouse must be to an edge to start scrolling.
          scrollSpeed: 10, // px

          // Element is dropped into the list from another list
          onAdd: function (/**Event*/evt) {
              var itemEl = evt.item;  // dragged HTMLElement
              evt.from;  // previous list
              // + indexes from onEnd

              target = $(itemEl).closest(".tasks-table");

              $.get("/tasks/" + itemEl.dataset.taskId + "/edit", { status: target[0].dataset.taskStatus });
          },
      });
    </script>

  </body>
</html>